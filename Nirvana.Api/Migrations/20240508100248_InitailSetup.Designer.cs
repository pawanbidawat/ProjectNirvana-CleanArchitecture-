// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nirvana.Infrastructure.DataBase;

#nullable disable

namespace Nirvana.Api.Migrations
{
    [DbContext(typeof(HotelDbContext))]
    [Migration("20240508100248_InitailSetup")]
    partial class InitailSetup
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Nirvana.Domain.Entity.BlackoutDateEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("BlackoutDates");
                });

            modelBuilder.Entity("Nirvana.Domain.Entity.HotelDetailsEntity", b =>
                {
                    b.Property<int>("HotelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HotelId"));

                    b.Property<string>("BlockedChildRange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HotelAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HotelDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HotelImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HotelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("HotelId");

                    b.ToTable("HotelDetails");
                });

            modelBuilder.Entity("Nirvana.Domain.Entity.HotelRoomEntity", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("RoomImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoomId");

                    b.HasIndex("HotelId");

                    b.ToTable("HotelRoom");
                });

            modelBuilder.Entity("Nirvana.Domain.Entity.RoomPriceAndDateRangeEntity", b =>
                {
                    b.Property<int>("DateRangeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DateRangeId"));

                    b.Property<decimal?>("AdultRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ChildRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTo")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("DoubleRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("ExceptionCase")
                        .HasColumnType("bit");

                    b.Property<bool>("NoChild")
                        .HasColumnType("bit");

                    b.Property<bool>("NoExtraAdult")
                        .HasColumnType("bit");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<bool>("SingleEqualDouble")
                        .HasColumnType("bit");

                    b.Property<decimal?>("SingleRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TripleRate")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("DateRangeId");

                    b.HasIndex("RoomId");

                    b.ToTable("RoomPriceAndDateRange");
                });

            modelBuilder.Entity("Nirvana.Domain.Entity.BlackoutDateEntity", b =>
                {
                    b.HasOne("Nirvana.Domain.Entity.HotelRoomEntity", "RoomEntity")
                        .WithMany("BlackoutDates")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomEntity");
                });

            modelBuilder.Entity("Nirvana.Domain.Entity.HotelRoomEntity", b =>
                {
                    b.HasOne("Nirvana.Domain.Entity.HotelDetailsEntity", "HotelDetail")
                        .WithMany("HotelRooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HotelDetail");
                });

            modelBuilder.Entity("Nirvana.Domain.Entity.RoomPriceAndDateRangeEntity", b =>
                {
                    b.HasOne("Nirvana.Domain.Entity.HotelRoomEntity", "Room")
                        .WithMany("DateRanges")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Nirvana.Domain.Entity.HotelDetailsEntity", b =>
                {
                    b.Navigation("HotelRooms");
                });

            modelBuilder.Entity("Nirvana.Domain.Entity.HotelRoomEntity", b =>
                {
                    b.Navigation("BlackoutDates");

                    b.Navigation("DateRanges");
                });
#pragma warning restore 612, 618
        }
    }
}
